{"version":3,"sources":["components/Message.js","tools/Config.js","components/Game.js","components/App.js","serviceWorker.js","index.js"],"names":["Message","_this","this","react_default","a","createElement","className","id","props","role","aria-hidden","type","data-dismiss","aria-label","points","onClick","resetGame","$","modal","PureComponent","Config","Game","width","height","resolution","refreshRate","config","w","h","res","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getFood","check","arguments","length","undefined","getValue","max","Math","round","random","x","y","getSnake","find","e","snake","state","tail","head","concat","toConsumableArray","moveSnake","nextHead","direction","dead","foodEaten","food","changePointsSum","pop","setState","changeDirection","_x","_y","_this2","document","addEventListener","key","svg","d3","append","attr","interval","setInterval","draw","clearInterval","selectAll","remove","style","data","bodyColor","enter","d","text","Fragment","components_Message","getPoints","Component","App","value","components_Game","Boolean","window","location","hostname","match","ReactDOM","render","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.be6490f5.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport $ from \"jquery\";\r\nclass Message extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"modal fade\"\r\n        id={this.props.id}\r\n        role=\"dialog\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                The End\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">Points: {this.props.points}</div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success\"\r\n                onClick={() => {\r\n                  this.props.resetGame();\r\n                  $(\"#\" + this.props.id).modal(\"hide\");\r\n                }}\r\n              >\r\n                Try again\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Message;\r\n","const Config = {\r\n  Game: {\r\n    width: 300,\r\n    height: 300,\r\n    resolution: 20,\r\n    refreshRate: 200\r\n  }\r\n};\r\n\r\nexport default Config;\r\n","import React, { Component } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport \"../tools/style.css\";\r\nimport \"bootstrap\";\r\nimport Message from \"./Message\";\r\nimport $ from \"jquery\";\r\nimport Config from \"../tools/Config\";\r\nconst config = Config.Game;\r\nconst w = config.width;\r\nconst h = config.height;\r\nconst res = config.resolution;\r\n\r\nclass Game extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      snake: {\r\n        direction: {\r\n          x: 1,\r\n          y: 0\r\n        },\r\n        head: {\r\n          x: 2,\r\n          y: 0\r\n        },\r\n        tail: [],\r\n        dead: false\r\n      },\r\n      food: this.getFood(false)\r\n    };\r\n  }\r\n  getFood = (check = true) => {\r\n    let getValue = max => Math.round((Math.random() * (max - res)) / res);\r\n    let x = getValue(w);\r\n    let y = getValue(h);\r\n    while (check) {\r\n      const snake = this.getSnake();\r\n      let insideSnake = snake.find(e => e.x === x && e.y === y);\r\n      if (insideSnake) {\r\n        x = getValue(w);\r\n        y = getValue(h);\r\n      } else {\r\n        check = false;\r\n      }\r\n    }\r\n\r\n    return {\r\n      x: x,\r\n      y: y\r\n    };\r\n  };\r\n  getSnake = () => {\r\n    const snake = this.state.snake;\r\n    if (snake.tail === null || snake.tail.length === 0) {\r\n      return [snake.head, snake.head];\r\n    }\r\n    return [snake.head, snake.head, ...snake.tail];\r\n  };\r\n  moveSnake = () => {\r\n    let snake = this.state.snake;\r\n    let nextHead = {\r\n      x: this.state.snake.head.x + this.state.snake.direction.x,\r\n      y: this.state.snake.head.y + this.state.snake.direction.y\r\n    };\r\n    if (nextHead.x >= w / res) {\r\n      nextHead.x = 0;\r\n    }\r\n    if (nextHead.x < 0) {\r\n      nextHead.x = w / res - 1;\r\n    }\r\n\r\n    if (nextHead.y >= h / res) {\r\n      nextHead.y = 0;\r\n    }\r\n\r\n    if (nextHead.y < 0) {\r\n      nextHead.y = h / res - 1;\r\n    }\r\n\r\n    const tailEaten = snake.tail.find(\r\n      e => e.x === nextHead.x && e.y === nextHead.y\r\n    );\r\n    if (tailEaten) {\r\n      snake.dead = true;\r\n      $(\"#message\").modal(\"show\");\r\n    }\r\n    const foodEaten =\r\n      this.state.food.x === nextHead.x && this.state.food.y === nextHead.y;\r\n    if (foodEaten) {\r\n      this.props.changePointsSum(1);\r\n      if (snake.tail.length === 0) {\r\n        snake.tail = [snake.head];\r\n      } else if (snake.tail.length > 0) {\r\n        snake.tail = [snake.head, ...snake.tail];\r\n      }\r\n    } else {\r\n      if (snake.tail.length === 1) {\r\n        snake.tail = [snake.head];\r\n      } else if (snake.tail.length > 1) {\r\n        snake.tail = [snake.head, ...snake.tail];\r\n        snake.tail.pop();\r\n      }\r\n    }\r\n\r\n    snake.head = nextHead;\r\n    if (foodEaten) {\r\n      this.setState({ snake, food: this.getFood() });\r\n    } else {\r\n      this.setState({ snake });\r\n    }\r\n  };\r\n  changeDirection = (_x, _y) => {\r\n    let snake = this.state.snake;\r\n    if (\r\n      (snake.direction.x === -_x && _x !== 0) ||\r\n      (snake.direction.y === -_y && _y !== 0)\r\n    ) {\r\n      return;\r\n    }\r\n    snake.direction.x = _x;\r\n    snake.direction.y = _y;\r\n    this.setState({ snake });\r\n  };\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", e => {\r\n      if (e.key === \"ArrowUp\") {\r\n        this.changeDirection(0, -1);\r\n      } else if (e.key === \"ArrowDown\") {\r\n        this.changeDirection(0, 1);\r\n      } else if (e.key === \"ArrowLeft\") {\r\n        this.changeDirection(-1, 0);\r\n      } else if (e.key === \"ArrowRight\") {\r\n        this.changeDirection(1, 0);\r\n      }\r\n    });\r\n    this.svg = d3\r\n      .select(\"#board\")\r\n      .append(\"svg\")\r\n      .attr(\"class\", \"board\")\r\n      .attr(\"width\", w)\r\n      .attr(\"height\", h);\r\n    this.interval = setInterval(() => {\r\n      this.moveSnake();\r\n      this.draw();\r\n      if (this.state.snake.dead) {\r\n        clearInterval(this.interval);\r\n      }\r\n    }, this.props.refreshRate);\r\n  }\r\n\r\n  draw() {\r\n    this.svg.selectAll(\"rect\").remove();\r\n    let food = this.state.food;\r\n    this.svg\r\n      .append(\"rect\")\r\n      .attr(\"x\", food.x * res)\r\n      .attr(\"y\", food.y * res)\r\n      .attr(\"width\", res)\r\n      .attr(\"height\", res)\r\n      .style(\"stroke\", \"#28a745\")\r\n      .style(\"stroke-width\", 1)\r\n      .attr(\"fill\", \"#c3e6cb\");\r\n    let data = this.getSnake();\r\n    let bodyColor = this.state.snake.dead ? \"red\" : \"#28a745\";\r\n    this.svg\r\n      .selectAll(\"rect\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", d => d.x * res)\r\n      .attr(\"y\", d => d.y * res)\r\n      .attr(\"width\", res)\r\n      .attr(\"height\", res)\r\n      .style(\"stroke\", \"#d4edda\")\r\n      .style(\"stroke-width\", 1)\r\n      .attr(\"fill\", bodyColor);\r\n  }\r\n\r\n  render() {\r\n    const text = `Food: x: ${this.state.food.x}  y:  ${this.state.food.y}\\n\r\n    Head: x: ${this.state.snake.head.x}  y:  ${this.state.snake.head.y}\\n`;\r\n    return (\r\n      <>\r\n        <div id=\"board\" style={{ width: \"100%\", height: \"100%\" }} />\r\n        <div className=\"alert alert-success fade show\" role=\"alert\">\r\n          {text}\r\n        </div>\r\n        <Message\r\n          id=\"message\"\r\n          points={this.props.getPoints()}\r\n          resetGame={this.props.resetGame}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from \"react\";\nimport Game from \"./Game\";\nimport Config from \"../tools/Config\";\nconst refreshRate = Config.Game.refreshRate;\n\nclass App extends Component {\n  state = {\n    points: 0,\n    key: 0\n  };\n  changePointsSum = value => {\n    let points = this.state.points;\n    this.setState({ points: points + value });\n  };\n  resetGame = () => {\n    const key = this.state.key;\n    this.setState({ key: key + 1, points: 0 });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"text-success\">Snake</h1>\n\n        <span className=\"badge badge-dark\">{this.state.points}</span>\n        <hr />\n        <Game\n          key={this.state.key}\n          data={this.state.data}\n          refreshRate={refreshRate}\n          changePointsSum={this.changePointsSum}\n          getPoints={() => this.state.points}\n          resetGame={this.resetGame}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./tools/style.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}